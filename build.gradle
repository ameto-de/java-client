plugins {
    id 'net.ltgt.apt' version '0.10'
    id "com.palantir.git-version" version "0.12.0-rc2"
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'

group = "de.ameto"
version = gitVersion(prefix: 'client-')
sourceCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
}

sourceSets {
    integration {
        java.srcDir file('src/integration/java')
        resources.srcDir file('src/integration/resources')
        compileClasspath += sourceSets.main.output + configurations.testRuntime
        runtimeClasspath += output + compileClasspath
    }

    // IntelliJ Workaround
    test {
        java.srcDir file('src/integration/java')
    }
}

configurations {
    integrationImplementation.extendsFrom implementation
    integrationImplementation.extendsFrom testImplementation
}

dependencies {
    compile('com.squareup.retrofit2:retrofit:2.3.0')
    compile('com.squareup.retrofit2:converter-jackson:2.3.0')
    compileOnly('org.projectlombok:lombok:1.16.18')
	apt('org.projectlombok:lombok:1.16.18')
    testCompile('junit:junit:4.12')
    testCompile('org.assertj:assertj-core:3.8.0')
    testCompileOnly('org.projectlombok:lombok:1.16.18')
}

test {
    testLogging {exceptionFormat = 'full'}
}

task integrationTest(type: Test) {
    description = 'Runs integration tests.'
    group = 'verification'

    testClassesDirs = sourceSets.integration.output.classesDirs
    classpath = sourceSets.integration.runtimeClasspath
    mustRunAfter test
}

check.dependsOn integrationTest


task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'Ameto client'
                packaging 'jar'
                description 'Client library for interacting with Ameto'
                url 'https://www.ameto.de'

                scm {
                    connection 'scm:git:https://github.com/ameto-de/java-client.git'
                    developerConnection 'scm:git:ssh://git@github.com/ameto-de/java-client.git'
                    url 'https://github.com/ameto-de/java-client'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'mseifert'
                        name 'Michael Seifert'
                        email 'm.seifert@digitalernachschub.de'
                    }
                }
            }
        }
    }
}